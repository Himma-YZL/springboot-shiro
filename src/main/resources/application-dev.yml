server:
  port: 9000

#spring:
#  datasource:
#    url: jdbc:mysql://localhost:3306/shiro?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
#    username: root
#    password: 123456
#    driver-class-name: com.mysql.cj.jdbc.Driver
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/shiro?serverTimezone=UTC&useUnicode=true&useSSL=false&characterEncoding=utf8
    username: root
    password: 123456
    druid:
      # 初始连接数
      initialSize: 10
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 100
      # 配置获取连接等待超时的时间
      maxWait: 10000
      # 配置间隔多久启动一次DestroyThread，对连接池内的连接才进行一次检测，单位是毫秒。
      # 检测时:1.如果连接空闲并且超过minIdle以外的连接，如果空闲时间超过minEvictableIdleTimeMillis设置的值则直接物理关闭。2.在minIdle以内的不处理。
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最大空闲时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      maxEvictableIdleTimeMillis: 180000
      # 设置从连接池获取连接时是否检查连接有效性，true时，每次都检查;false时，不检查
      testOnBorrow: true
      # 设置往连接池归还连接时是否检查连接有效性，true时，每次都检查;false时，不检查
      testOnReturn: false
      # 设置从连接池获取连接时是否检查连接有效性，true时，如果连接空闲时间超过minEvictableIdleTimeMillis进行检查，否则不检查;false时，不检查
      testWhileIdle: true
      # 检验连接是否有效的查询语句。如果数据库Driver支持ping()方法，则优先使用ping()方法进行检查，否则使用validationQuery查询进行检查。(Oracle jdbc Driver目前不支持ping方法)
      validationQuery: select 1 from user
      # 连接泄露检查，打开removeAbandoned功能 , 连接从连接池借出后，长时间不归还，将触发强制回连接。回收周期随timeBetweenEvictionRunsMillis进行，如果连接为从连接池借出状态，并且未执行任何sql，并且从借出时间起已超过removeAbandonedTimeout时间，则强制归还连接到连接池中。
      removeAbandoned: true
      # 超时时间，秒
      removeAbandonedTimeout: 1800
      # 关闭abanded连接时输出错误日志，这样出现连接泄露时可以通过错误日志定位忘记关闭连接的位置
      logAbandoned: true
      # 打开PSCache，并且指定每个连接上PSCache的大小，Oracle等支持游标的数据库，打开此开关，会以数量级提升性能，具体查阅PSCache相关资料
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计日志的输出间隔，单位毫秒，每次输出所有统计数据会重置，酌情开启
      timeBetweenLogStatsMillis: 120000
      # 配置监控统计拦截的filters
      stat-view-servlet:
        enabled: true
        url-pattern: /monitor/druid/*
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true

  redis:
    #redis机器ip
    host: 127.0.0.1
    #redis端口
    port: 6379
    # redis db
    database: 3
    #redis密码
    password: 123456
    #最大空闲数
    maxIdle: 300
    #连接池的最大数据库连接数。设为0表示无限制,如果是jedis 2.4以后用redis.maxTotal
    #maxActive=600
    #控制一个pool可分配多少个jedis实例,用来替换上面的redis.maxActive,如果是jedis 2.4以后用该属性
    maxTotal: 1000
    #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
    maxWaitMillis: 1000
    #连接的最小空闲时间 默认1800000毫秒(30分钟)
    minEvictableIdleTimeMillis: 300000
    #每次释放连接的最大数目,默认3
    numTestsPerEvictionRun: 1024
    #逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
    timeBetweenEvictionRunsMillis: 30000
    #是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
    testOnBorrow: true
    #在空闲时检查有效性, 默认false
    testWhileIdle: true

  #热部署--静态资源立即生效
  thymeleaf:
    cache: false
    encoding: UTF-8
    mode: LEGACYHTML5
    prefix: classpath:/templates/
    suffix: .html
    check-template-location: true
  #热部署生效
  devtools:
    restart:
      enabled: true

# 日志配置
logging:
  config: classpath:logback-spring.xml
  file:
    path: ${user.home}/Logs/showcase

# mybatis config
mybatis-plus:
  configuration:
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

swagger:
  #是否启用
  enabled: true
  #controller包位置
  base-package: com.bgy.phoenixtree.cms.controller
  host: localhost:${server.port}
  #不屏蔽资源，值为true时屏蔽所有资源
  production: false
  #登录校验
  basic:
    enable: true
    username: root
    password: 123456